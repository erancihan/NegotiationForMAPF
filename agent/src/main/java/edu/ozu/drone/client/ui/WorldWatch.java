/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ozu.drone.client.ui;

import edu.ozu.drone.client.AgentHandler;
import edu.ozu.drone.utils.JSONWorldWatch;
import edu.ozu.drone.utils.Point;

import java.awt.*;
import java.util.Arrays;

/**
 *
 * @author freedrone
 */
public class WorldWatch extends javax.swing.JPanel {
    private static final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(WorldWatch.class);

    private String agent_name;
    private AgentHandler client;
    private String server;
    private AgentUI parent;
    private String world_id;

    /**
     * Creates new form WorldWatch
     */
    public WorldWatch() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel canvas_container = new javax.swing.JPanel();
        canvas = new edu.ozu.drone.client.ui.WorldCanvas();
        javax.swing.JPanel controls = new javax.swing.JPanel();

        setBackground(new java.awt.Color(254, 254, 254));
        setToolTipText("");
        setMinimumSize(new java.awt.Dimension(600, 300));
        setPreferredSize(new java.awt.Dimension(600, 300));
        setLayout(new java.awt.GridBagLayout());

        canvas_container.setMinimumSize(new java.awt.Dimension(300, 300));
        canvas_container.setPreferredSize(new java.awt.Dimension(300, 300));
        canvas_container.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        canvas.setPreferredSize(new java.awt.Dimension(300, 300));
        canvas_container.add(canvas);

        add(canvas_container, new java.awt.GridBagConstraints());

        controls.setBackground(new java.awt.Color(164, 221, 252));
        controls.setPreferredSize(new java.awt.Dimension(300, 300));
        controls.setLayout(new java.awt.GridBagLayout());
        add(controls, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

    void setAgentName(String name) {
        this.agent_name = name;
    }

    void setClient(AgentHandler client) {
        this.client = client;
    }

    void setServer(String server) {
        this.server = server;
    }

    void setParent(AgentUI ui) {
        this.parent = ui;
    }

    void setWorldID(String world_id) {
        this.world_id = world_id;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private edu.ozu.drone.client.ui.WorldCanvas canvas;
    // End of variables declaration//GEN-END:variables

    public void mount()
    {
        logger.info("mount");
        client.setWatchUIRef(this);
        client.join(world_id);
    }

    public void unmount()
    {
        logger.info("unmount");
        if (client != null)
            client.leave();
    }

    public void draw(JSONWorldWatch data, Point agent_position)
    {
        canvas.setBackground(new Color(195, 224, 254));
        canvas.setData(data, agent_position);
    }
}
